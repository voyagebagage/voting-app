{
    "sourceFile": "src/app/components/VotingApp.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1725311867190,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1725316872270,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,8 +21,12 @@\n   ]);\n   const [selectedCategory, setSelectedCategory] = useState<string>(\"\");\n   const [newItemName, setNewItemName] = useState<string>(\"\");\n   const { user } = useAuth();\n+  // const [items, setItems] = useState<Item[]>([]);\n+  const [category, setCategory] = useState('');\n+  const [suggestions, setSuggestions] = useState<string[]>([]);\n+  const [type, setType] = useState('place');\n \n   useEffect(() => {\n     // Fetch categories\n     fetch(\"/api/categories\")\n@@ -68,38 +72,79 @@\n     }\n   };\n \n   return (\n-    <div className=\"p-4\">\n+    // <div className=\"p-4\">\n+    //   <h1 className=\"text-2xl font-bold mb-4\">Voting App</h1>\n+    //   <select\n+    //     value={selectedCategory}\n+    //     onChange={(e) => setSelectedCategory(e.target.value)}\n+    //     className=\"mb-4 tg-select w-full\">\n+    //     <option value=\"\">Select a category</option>\n+    //     {categories.map((category) => (\n+    //       <option key={category} value={category}>\n+    //         {category}\n+    //       </option>\n+    //     ))}\n+    //   </select>\n+    //   {selectedCategory && (\n+    //     <div className=\"mb-4 flex\">\n+    //       <input\n+    //         type=\"text\"\n+    //         value={newItemName}\n+    //         onChange={(e) => setNewItemName(e.target.value)}\n+    //         placeholder=\"New item name\"\n+    //         className=\"tg-input flex-grow mr-2\"\n+    //       />\n+    //       <button\n+    //         onClick={handleAddItem}\n+    //         className=\"tg-button tg-button-primary\">\n+    //         Add Item\n+    //       </button>\n+    //     </div>\n+    //   )}\n+    //   <ul>\n+    <div className=\"p-4 bg-tg-theme-bg-color text-tg-theme-text-color\">\n       <h1 className=\"text-2xl font-bold mb-4\">Voting App</h1>\n-      <select\n-        value={selectedCategory}\n-        onChange={(e) => setSelectedCategory(e.target.value)}\n-        className=\"mb-4 tg-select w-full\">\n-        <option value=\"\">Select a category</option>\n-        {categories.map((category) => (\n-          <option key={category} value={category}>\n-            {category}\n-          </option>\n-        ))}\n-      </select>\n-      {selectedCategory && (\n-        <div className=\"mb-4 flex\">\n+      <div className=\"flex mb-4\">\n+        <div className=\"relative flex-grow\">\n           <input\n             type=\"text\"\n-            value={newItemName}\n-            onChange={(e) => setNewItemName(e.target.value)}\n-            placeholder=\"New item name\"\n-            className=\"tg-input flex-grow mr-2\"\n+            value={category}\n+            onChange={(e) => setCategory(e.target.value)}\n+            placeholder=\"Enter category\"\n+            className=\"w-full p-2 border rounded-l\"\n           />\n-          <button\n-            onClick={handleAddItem}\n-            className=\"tg-button tg-button-primary\">\n-            Add Item\n-          </button>\n+          {suggestions.length > 0 && (\n+            <ul className=\"absolute z-10 w-full bg-white border border-t-0 rounded-b\">\n+              {suggestions.map((suggestion, index) => (\n+                <li\n+                  key={index}\n+                  onClick={() => setCategory(suggestion)}\n+                  className=\"p-2 hover:bg-gray-100 cursor-pointer\"\n+                >\n+                  {suggestion}\n+                </li>\n+              ))}\n+            </ul>\n+          )}\n         </div>\n-      )}\n-      <ul>\n+        <select\n+          value={type}\n+          onChange={(e) => setType(e.target.value)}\n+          className=\"p-2 border border-l-0 rounded-r\"\n+        >\n+          <option value=\"place\">Place</option>\n+          <option value=\"person\">Person</option>\n+          <option value=\"service\">Service</option>\n+        </select>\n+      </div>\n+      <button\n+        onClick={fetchItems}\n+        className=\"w-full p-2 bg-tg-theme-button-color text-tg-theme-button-text-color rounded mb-4\"\n+      >\n+        Search\n+      </button>\n         {items.map((item) => (\n           <li key={item.id} className=\"tg-list-item\">\n             <span>{item.name}</span>\n             <div>\n"
                },
                {
                    "date": 1725316933686,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -138,9 +138,9 @@\n           <option value=\"service\">Service</option>\n         </select>\n       </div>\n       <button\n-        onClick={fetchItems}\n+        // onClick={fetchItems}\n         className=\"w-full p-2 bg-tg-theme-button-color text-tg-theme-button-text-color rounded mb-4\"\n       >\n         Search\n       </button>\n"
                },
                {
                    "date": 1725317018829,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,11 +22,11 @@\n   const [selectedCategory, setSelectedCategory] = useState<string>(\"\");\n   const [newItemName, setNewItemName] = useState<string>(\"\");\n   const { user } = useAuth();\n   // const [items, setItems] = useState<Item[]>([]);\n-  const [category, setCategory] = useState('');\n+  const [category, setCategory] = useState(\"\");\n   const [suggestions, setSuggestions] = useState<string[]>([]);\n-  const [type, setType] = useState('place');\n+  const [type, setType] = useState(\"place\");\n \n   useEffect(() => {\n     // Fetch categories\n     fetch(\"/api/categories\")\n@@ -119,10 +119,9 @@\n               {suggestions.map((suggestion, index) => (\n                 <li\n                   key={index}\n                   onClick={() => setCategory(suggestion)}\n-                  className=\"p-2 hover:bg-gray-100 cursor-pointer\"\n-                >\n+                  className=\"p-2 hover:bg-gray-100 cursor-pointer\">\n                   {suggestion}\n                 </li>\n               ))}\n             </ul>\n@@ -130,36 +129,35 @@\n         </div>\n         <select\n           value={type}\n           onChange={(e) => setType(e.target.value)}\n-          className=\"p-2 border border-l-0 rounded-r\"\n-        >\n+          className=\"p-2 border border-l-0 rounded-r\">\n           <option value=\"place\">Place</option>\n           <option value=\"person\">Person</option>\n           <option value=\"service\">Service</option>\n         </select>\n       </div>\n       <button\n         // onClick={fetchItems}\n-        className=\"w-full p-2 bg-tg-theme-button-color text-tg-theme-button-text-color rounded mb-4\"\n-      >\n+        className=\"w-full p-2 bg-tg-theme-button-color text-tg-theme-button-text-color rounded mb-4\">\n         Search\n       </button>\n-        {items.map((item) => (\n-          <li key={item.id} className=\"tg-list-item\">\n-            <span>{item.name}</span>\n-            <div>\n-              <span className=\"mr-2\">Votes: {item.votes}</span>\n-              <button\n-                onClick={() => handleVote(item.id)}\n-                className=\"tg-button tg-button-primary\">\n-                Vote\n-              </button>\n-            </div>\n-          </li>\n-        ))}\n-      </ul>\n+      {items.map((item) => (\n+        <li key={item.id} className=\"tg-list-item\">\n+          <span>{item.name}</span>\n+          <div>\n+            <span className=\"mr-2\">Votes: {item.votes}</span>\n+            <button\n+              onClick={() => handleVote(item.id)}\n+              className=\"tg-button tg-button-primary\">\n+              Vote\n+            </button>\n+          </div>\n+        </li>\n+      ))}\n+      {/* </ul> */}\n     </div>\n+    // </div>\n   );\n };\n \n export default VotingApp;\n"
                }
            ],
            "date": 1725311867190,
            "name": "Commit-0",
            "content": "\"use client\";\nimport React, { useState, useEffect } from \"react\";\nimport { useAuth } from \"@/context/AuthContext\";\n// import \"../app/global.css\";\n// import { global } from \"styled-jsx/css\";\n\ninterface Item {\n  id: string;\n  name: string;\n  votes: number;\n  category: string;\n}\n\nconst VotingApp: React.FC = () => {\n  const [items, setItems] = useState<Item[]>([]);\n  const [categories, setCategories] = useState<string[]>([\n    \"Croissant\",\n    \"Pizza\",\n    \"Coffee\",\n    \"Pad Thai\",\n  ]);\n  const [selectedCategory, setSelectedCategory] = useState<string>(\"\");\n  const [newItemName, setNewItemName] = useState<string>(\"\");\n  const { user } = useAuth();\n\n  useEffect(() => {\n    // Fetch categories\n    fetch(\"/api/categories\")\n      .then((res) => res.json())\n      .then((data) => setCategories(data));\n  }, []);\n\n  useEffect(() => {\n    if (selectedCategory) {\n      // Fetch items for selected category\n      fetch(`/api/items?category=${selectedCategory}`)\n        .then((res) => res.json())\n        .then((data) => setItems(data));\n    }\n  }, [selectedCategory]);\n\n  const handleVote = async (itemId: string) => {\n    const response = await fetch(\"/api/vote\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ itemId, userId: user?.id }),\n    });\n    if (response.ok) {\n      const updatedItem = await response.json();\n      setItems(\n        items.map((item) => (item.id === updatedItem.id ? updatedItem : item))\n      );\n    }\n  };\n\n  const handleAddItem = async () => {\n    if (newItemName && selectedCategory) {\n      const response = await fetch(\"/api/items\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ name: newItemName, category: selectedCategory }),\n      });\n      if (response.ok) {\n        const newItem = await response.json();\n        setItems([...items, newItem]);\n        setNewItemName(\"\");\n      }\n    }\n  };\n\n  return (\n    <div className=\"p-4\">\n      <h1 className=\"text-2xl font-bold mb-4\">Voting App</h1>\n      <select\n        value={selectedCategory}\n        onChange={(e) => setSelectedCategory(e.target.value)}\n        className=\"mb-4 tg-select w-full\">\n        <option value=\"\">Select a category</option>\n        {categories.map((category) => (\n          <option key={category} value={category}>\n            {category}\n          </option>\n        ))}\n      </select>\n      {selectedCategory && (\n        <div className=\"mb-4 flex\">\n          <input\n            type=\"text\"\n            value={newItemName}\n            onChange={(e) => setNewItemName(e.target.value)}\n            placeholder=\"New item name\"\n            className=\"tg-input flex-grow mr-2\"\n          />\n          <button\n            onClick={handleAddItem}\n            className=\"tg-button tg-button-primary\">\n            Add Item\n          </button>\n        </div>\n      )}\n      <ul>\n        {items.map((item) => (\n          <li key={item.id} className=\"tg-list-item\">\n            <span>{item.name}</span>\n            <div>\n              <span className=\"mr-2\">Votes: {item.votes}</span>\n              <button\n                onClick={() => handleVote(item.id)}\n                className=\"tg-button tg-button-primary\">\n                Vote\n              </button>\n            </div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default VotingApp;\n"
        }
    ]
}